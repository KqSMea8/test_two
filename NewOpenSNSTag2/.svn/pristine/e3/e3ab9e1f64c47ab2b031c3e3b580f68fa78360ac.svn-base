<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 15-4-28
 * Time: 上午11:30
 * @author 郑钟良<zzl@ourstu.com>
 */

namespace Api\Controller;
use Enterprise\Service\EnterpriseService;
use Think\Controller;
use Wechat\Model\WechatFacilitatorModel;
use Wechat\Model\WechatMemberModel;
use Wechat\Model\WechatOrderItemModel;
use Wechat\Model\WechatOrderModel;
use Wechat\Service\WechatPublicOrderService;
use Wechat\Service\WechatService;

class ApiController extends Controller
{

    private $WechatOrderModel;
    private $WechatOrderItemModel;
    private $WechatPublicOrderService;
    private $WechatService;
    private $WechatMemberModel;

    function _initialize()
    {

        $this->WechatOrderModel = new WechatOrderModel();
        $this->WechatOrderItemModel = new WechatOrderItemModel();
        $this->WechatPublicOrderService = new WechatPublicOrderService();
        $this->WechatService = new WechatService();
        $this->WechatMemberModel = new WechatMemberModel();
    }
    public function test(){
        $update_time = "2018-01-19 17:01:29";
        echo $update_time."<br/>";
        echo date("Y-m-d H:i:s",strtotime("$update_time  +40 minute"))."<br/>";

        echo  date("Y-m-d 22:00:00")."<br/>";
        echo  date("Y-m-d 09:00:00",strtotime("+1 day"))."<br/>";
    }
    //给客服发消息
    private function sendServerMsg($orderId,$msgType){
        $enterpriseService = new EnterpriseService(COMPANY_EMCODINGASEKEY,COMPANY_TOKEN,COMPANY_CORPID,COMPANY_CUSTOMER_APPSECRET);
        $param = $enterpriseService->getCustomerSendMsg($orderId,$msgType);//新工单提醒
        $enterpriseService->sendMessage($param);//新工单提醒
    }
    //给主管发消息
    private function sendMasterMsg($orderId,$msgType){
        $enterpriseService = new EnterpriseService(COMPANY_EMCODINGASEKEY,COMPANY_TOKEN,COMPANY_CORPID,COMPANY_DISTRIBUTE_APPSECRET);
        $param = $enterpriseService->getDistributeSendMsg($orderId,$msgType);//新工单提醒
        $enterpriseService->sendMessage($param);//新工单提醒
    }
    //给师傅发消息
    private function sendWorkerMsg($orderId,$msgType,$orderType){
        if($orderType == 1){
            $codescrect = COMPANY_MAINTAIN_APPSECRET;
        }elseif($orderType == 2){
            $codescrect = COMPANY_CLEANKILL_APPSECRET;
        }else{
            $codescrect = COMPANY_CLEANING_APPSECRET;
        }
        $enterpriseService = new EnterpriseService(COMPANY_EMCODINGASEKEY,COMPANY_TOKEN,COMPANY_CORPID,$codescrect);
        $param = $enterpriseService->getMasterSendMsg($orderId,$msgType);//新工单提醒
        $enterpriseService->sendMessage($param);//新工单提醒
    }
    /**
     * 给客服端和主管端发送定时消息
     * @author pangyongfu
     */
    public function sendMsgToServerMaster(){

        //获取所有派单中的订单
        $map['order_state'] = 0;//派单中
        $map['workers_id'] = 0;
        $map['facilitator_id'] = ["neq",0];
        $map['supervisor_id'] = 0;
        $orderData = $this->WechatOrderModel->where($map)->select();

        //判断订单的下单时间
//        $tenTime = date("Y-m-d 22:00:00");
//        $nextDataTime = date("Y-m-d 09:00:00",strtotime("+1 day"));
        foreach($orderData as $key=>$value){
//            //下单时间在今天22:00之后，第二天9：00之间则跳过
//            if(strtotime($value['create_time']) >= strtotime($tenTime) && strtotime($value['create_time']) <= strtotime($nextDataTime)){
//                continue;
//            }
            //根据订单类型判断对应【更新时间】是否超时，超时则发送消息
            //1设备维修（1小时），2门店消杀（1小时40分钟），3设备清洗（1小时40分钟）清洗和消杀走一个消息
            $update_time = $value['update_time'];
            if($value['order_type'] == 1){
                $server_type = 2;//客服发消息
                $mater_type = 3;//主管发消息
                $afterMasterTIme = date("Y-m-d H:i:s",strtotime("$update_time +30 minute"));//主管时间
                $afterServerTIme = date("Y-m-d H:i:s",strtotime("$update_time + 1 hour"));//客服时间
            }else{
                $server_type = 3;//客服发消息
                $mater_type = 3;//主管发消息
                $afterMasterTIme = date("Y-m-d H:i:s",strtotime("$update_time +40 minute"));//主管时间
                $afterServerTIme = date("Y-m-d H:i:s",strtotime("$update_time +1 hour +40 minute"));//客服时间
            }
            //超时发消息
            $now = date("Y-m-d H:i:s");
            if($value['master_facilitator_msg'] == 0){//未发过消息
                //如果时间大于给客服发消息的时间，则给主管和客服都发消息
                if(strtotime($now) > strtotime($afterServerTIme)){
                    //给客服端发消息提醒
                    $this->sendServerMsg($value['id'],$server_type);
                    //给分配主管发消息提醒
                    $this->sendMasterMsg($value['id'],$mater_type);
                    //更新订单客服主管发消息状态
                    $saveData['id'] = $value['id'];
                    $saveData['master_facilitator_msg'] = 2;
                    $this->WechatOrderModel->save($saveData);
                }elseif(strtotime($now) >= strtotime($afterMasterTIme) && strtotime($now) <= strtotime($afterServerTIme)){
                    //给分配主管发消息提醒
                    $this->sendMasterMsg($value['id'],$mater_type);
                    //更新订单客服主管发消息状态
                    $saveData['id'] = $value['id'];
                    $saveData['master_facilitator_msg'] = 1;
                    $this->WechatOrderModel->save($saveData);
                }
            }elseif($value['master_facilitator_msg'] == 1) {//给主管发过消息
                if(strtotime($now) > strtotime($afterServerTIme)){
                    //给客服端发消息提醒
                    $this->sendServerMsg($value['id'],$server_type);
                    //更新订单客服主管发消息状态
                    $saveData['id'] = $value['id'];
                    $saveData['master_facilitator_msg'] = 2;
                    $this->WechatOrderModel->save($saveData);
                }
            }
        }
    }

    /**
     * 给主管端和师傅端发消息
     * @author pangyongfu
     */
    public function sendMsgToMasterWorker(){
        //获取所有未接单，主管分配给师傅后师傅未接单的数据
        $map['order_state'] = 10;//未接单
        $map['workers_id'] = ["neq",0];
        $map['facilitator_id'] = ["neq",0];
        $map['supervisor_id'] = ["neq",0];
        $orderData = $this->WechatOrderModel->where($map)->select();

        //判断订单的下单时间
//        $tenTime = date("Y-m-d 22:00:00");
//        $nextDataTime = date("Y-m-d 09:00:00",strtotime("+1 day"));
        foreach($orderData as $okey=>$ovalue) {
            //下单时间在今天22:00之后，第二天9：00之间则跳过
//            if (strtotime($ovalue['create_time']) >= strtotime($tenTime) && strtotime($ovalue['create_time']) <= strtotime($nextDataTime)) {
//                continue;
//            }
            //根据订单类型判断对应【更新时间】是否超时，超时则发送消息
            //1设备维修（1小时），2门店消杀（1小时40分钟），3设备清洗（1小时40分钟）清洗和消杀走一个消息
            $update_time = $ovalue['update_time'];
            if($ovalue['order_type'] == 1){
                $worker_type = 2;//师傅发消息
                $mater_type = 4;//主管发消息
                $afterWorkerTIme = date("Y-m-d H:i:s",strtotime("$update_time +50 minute"));//主管时间
                $afterMasterTIme = date("Y-m-d H:i:s",strtotime("$update_time +55 hour"));//客服时间
            }else{
                $worker_type = 2;//师傅发消息
                $mater_type = 4;//主管发消息
                $afterWorkerTIme = date("Y-m-d H:i:s",strtotime("$update_time +1 hour +20 minute"));//主管时间
                $afterMasterTIme = date("Y-m-d H:i:s",strtotime("$update_time +1 hour +30 minute"));//客服时间
            }
            //超时发消息
            $now = date("Y-m-d H:i:s");
            if($ovalue['facilitator_workers_msg'] == 0){//未发过消息
                //如果时间大于给主管发消息的时间，则给主管和师傅都发消息
                if(strtotime($now) > strtotime($afterMasterTIme)){
                    //给师傅端发消息提醒
                    $this->sendWorkerMsg($ovalue['id'],$worker_type,$ovalue['order_type']);
                    //给分配主管发消息提醒
                    $this->sendMasterMsg($ovalue['id'],$mater_type);
                    //更新订单主管师傅发消息状态
                    $saveData['id'] = $ovalue['id'];
                    $saveData['facilitator_workers_msg'] = 2;
                    $this->WechatOrderModel->save($saveData);
                }elseif(strtotime($now) >= strtotime($afterWorkerTIme) && strtotime($now) <= strtotime($afterMasterTIme)){
                    //给师傅发消息提醒
                    $this->sendWorkerMsg($ovalue['id'],$worker_type,$ovalue['order_type']);
                    //更新订单主管师傅发消息状态
                    $saveData['id'] = $ovalue['id'];
                    $saveData['facilitator_workers_msg'] = 1;
                    $this->WechatOrderModel->save($saveData);
                }
            }elseif($ovalue['facilitator_workers_msg'] == 1) {//给主管发过消息
                if(strtotime($now) > strtotime($afterMasterTIme)){
                    //给主管端发消息提醒
                    $this->sendMasterMsg($ovalue['id'],$mater_type);
                    //更新订单主管师傅发消息状态
                    $saveData['id'] = $ovalue['id'];
                    $saveData['facilitator_workers_msg'] = 2;
                    $this->WechatOrderModel->save($saveData);
                }
            }
        }
    }

    /**
     * 消杀订单超过30分钟未支付自动取消
     * @author pangyongfu
     */
    /*public function cancelCleanKillOrder(){
        //获取所有未接单，主管分配给师傅后师傅未接单的数据
        $map['orde.order_state'] = 2;//待支付
        $map['orde.order_type'] = 2;//门店消杀
//        $map['orde.no_pay_msg'] = 0;//未发送过消息
        $map['item.difference_status'] = 0;//无需差价支付
        $orderData = $this->WechatOrderModel->alias("orde")
            ->join("jpgk_wechat_order_item item on item.order_id = orde.id")
            ->where($map)
            ->field("orde.*,item.difference_status,item.difference_price")
            ->select();

        foreach($orderData as $kk=>$vv){

            //判断时间【超过30分钟取消并发消息，25~30之间只发消息，小于25不操作】
            $update_time = $vv['update_time'];
            $after25TIme = date("Y-m-d H:i:s",strtotime("$update_time +25 minute"));//用户时间
            $after30TIme = date("Y-m-d H:i:s",strtotime("$update_time +30 minute"));//用户时间
            $now = date("Y-m-d H:i:s");

            if(strtotime($now) >= strtotime($after30TIme)){
                //todo 给用户发消息
//                (new WechatService())->sendUserOrderOutMsgNew($vv['id'],'已取消',2);

                //todo 修改订单状态为已取消
                $saveData['id'] = $vv['id'];
                $saveData['order_state'] = 4;
                $this->WechatOrderModel->save($saveData);
            }elseif(strtotime($now) >= strtotime($after25TIme) && strtotime($now) <= strtotime($after30TIme) && $vv['no_pay_msg'] == 0){
                //todo 给用户发消息
                (new WechatService())->sendUserOrderOutMsgNew($vv['id'],'待支付',2);

                //todo no_pay_msg状态为已发送
                $saveData['id'] = $vv['id'];
                $saveData['no_pay_msg'] = 1;
                $this->WechatOrderModel->save($saveData);
            }
        }
    }*/

    /**
     * 维修和清洗超过24小时未支付发消息
     * @author pangyongfu
     */
    public function sendMsgAfter24Hour(){
        //获取所有维修和清洗的待支付订单
        $map['order_state'] = 2;//待支付
        $map['order_type'] = ["in",[1,3]];
        $map['no_pay_msg'] = 0;//未发送过消息
        $map['workers_id'] = ['neq',0];//师傅已接单
        $orderData = $this->WechatOrderModel->where($map)->select();
        
        //比较更新时间到现在是否超过24小时，超过24小时则自动发消息
        $now = date("Y-m-d H:i:s");
        foreach($orderData as $ork=>$orv){
            $create_time = $orv['create_time'];
            $after24Hour = date("Y-m-d H:i:s",strtotime("$create_time +1 day"));//用户时间
            if($now >= $after24Hour){

                //todo 发消息给用户
                if($orv['order_type'] == '1'){
                    (new WechatService())->sendUserOrderOutMsgNew($orv['id'],'待支付',1);
                }elseif($orv['order_type'] == '3'){
                    (new WechatService())->sendUserOrderOutMsgNew($orv['id'],'待支付',3);
                }

                //no_pay_msg状态为已发送
                $saveData['id'] = $orv['id'];
                $saveData['no_pay_msg'] = 1;
                $this->WechatOrderModel->save($saveData);

            }
        }

    }

    /**
     * KA订单超过30分钟未确认自动修改为已完成并给用户发消息
     */
    public function after30MinCompleteKaOrder(){
        //获取所有未接单，主管分配给师傅后师傅未接单的数据
        $map['orde.order_state'] = 9;//待确认
        $map['orde.is_ka'] = 1;//ka订单
        $orderData = $this->WechatOrderModel->alias("orde")
            ->join("jpgk_wechat_order_item item on item.order_id = orde.id")
            ->where($map)
            ->field("orde.*")
            ->select();
        foreach($orderData as $kk=>$vv){

            //判断时间【超过30分钟取消并发消息，25~30之间只发消息，小于25不操作】
            $update_time = $vv['update_time'];
            $after25TIme = date("Y-m-d H:i:s",strtotime("$update_time +25 minute"));//用户时间
            $after30TIme = date("Y-m-d H:i:s",strtotime("$update_time +30 minute"));//用户时间
            $now = date("Y-m-d H:i:s");

            if(strtotime($now) >= strtotime($after30TIme)){
                //todo 给用户发消息，订单已完成
                (new WechatService())->sendUserOrderOverMsgNew($vv['id']);

                //todo 修改订单状态为已取消
                $saveData['id'] = $vv['id'];
                $saveData['order_state'] = 3;
                $this->WechatOrderModel->save($saveData);
            }elseif(strtotime($now) >= strtotime($after25TIme) && strtotime($now) <= strtotime($after30TIme) && $vv['no_pay_msg'] == 0){
                //todo 给用户发消息,通知用户确认订单
                (new WechatService())->sendUserMakeSureOrderOverMsg($vv['id']);
            }
        }
    }

    /**
     * 清洗和消杀订单超过清洗或消杀周期发消息提醒
     */
    public function sendCycleMsg(){
        //获取所有消杀和清洗的已完成订单
        $map['order_state'] = ["in",[7,3]];//已完成
        $map['order_type'] = ["in",[2,3]];
        $map['member_cycle_msg'] = ['neq',2];//未给用户发消息或只发过一条
        $map['customer_cycle_msg'] = ['neq',2];//未给客服发消息或只发过一条
        $orderData = $this->WechatOrderModel->where($map)->select();
        $now = date("Y-m-d H:i:s");
        foreach($orderData as $kk=>$vv){

            //判断时间【超过最大天数直接该状态为2并发消息，54~57之间发消息并该状态为1，小于54不操作】
            //判断时间【超过最大天数直接该状态为2并发消息，24~27之间发消息并该状态为1，小于24不操作】
            $update_time = $vv['update_time'];
            $washAfter54Time = date("Y-m-d H:i:s",strtotime("$update_time +54 day"));//用户时间
            $washAfter57Time = date("Y-m-d H:i:s",strtotime("$update_time +57 day"));//用户时间
            $washAfter60Time = date("Y-m-d H:i:s",strtotime("$update_time +60 day"));//用户时间
            $cleanAfter24Time = date("Y-m-d H:i:s",strtotime("$update_time +24 day"));//用户时间
            $cleanAfter27Time = date("Y-m-d H:i:s",strtotime("$update_time +27 day"));//用户时间
            $cleanAfter30Time = date("Y-m-d H:i:s",strtotime("$update_time +30 day"));//用户时间

            if($vv['order_type'] == 3 && strtotime($now) >= strtotime($washAfter57Time)){
                //todo 给用户发清洗完成57天的消息
                (new WechatService())->sendServiceExpiration($vv['id'],$vv['order_type'],57,$washAfter60Time);

                //todo 修改订单消息状态为2
                $saveData['id'] = $vv['id'];
                $saveData['member_cycle_msg'] = 2;
                $this->WechatOrderModel->save($saveData);
            }elseif($vv['order_type'] == 3 && strtotime($now) >= strtotime($washAfter54Time) && strtotime($now) <= strtotime($washAfter57Time) && $vv['member_cycle_msg'] == 0){
                //todo 给用户发清洗完成54天的消息
                (new WechatService())->sendServiceExpiration($vv['id'],$vv['order_type'],54,$washAfter60Time);
                //todo 修改订单消息状态为2
                $saveData['id'] = $vv['id'];
                $saveData['member_cycle_msg'] = 1;
                $this->WechatOrderModel->save($saveData);
            }elseif($vv['order_type'] == 2 && strtotime($now) >= strtotime($cleanAfter27Time)){
                //todo 给用户发消杀完成27天的消息
                (new WechatService())->sendServiceExpiration($vv['id'],$vv['order_type'],27,$cleanAfter30Time);

                //todo 修改订单消息状态为2
                $saveData['id'] = $vv['id'];
                $saveData['member_cycle_msg'] = 2;
                $this->WechatOrderModel->save($saveData);
            }elseif($vv['order_type'] == 2 && strtotime($now) >= strtotime($cleanAfter24Time) && strtotime($now) <= strtotime($cleanAfter27Time) && $vv['member_cycle_msg'] == 0){
                //todo 给用户发消杀完成24天的消息
                (new WechatService())->sendServiceExpiration($vv['id'],$vv['order_type'],24,$cleanAfter30Time);
                //todo 修改订单消息状态为2
                $saveData['id'] = $vv['id'];
                $saveData['member_cycle_msg'] = 1;
                $this->WechatOrderModel->save($saveData);
            }

            $washAfter55Time = date("Y-m-d H:i:s",strtotime("$update_time +55 day"));//客服时间
            $washAfter58Time = date("Y-m-d H:i:s",strtotime("$update_time +58 day"));//客服时间
            $cleanAfter25Time = date("Y-m-d H:i:s",strtotime("$update_time +25 day"));//客服时间
            $cleanAfter28Time = date("Y-m-d H:i:s",strtotime("$update_time +28 day"));//客服时间
            if($vv['order_type'] == 3 && strtotime($now) >= strtotime($washAfter58Time)){
                //todo 给客服发清洗完成58天的消息
                $this->sendServerMsg($vv['id'],6);
                //todo 修改订单消息状态为2
                $saveData['id'] = $vv['id'];
                $saveData['customer_cycle_msg'] = 2;
                $this->WechatOrderModel->save($saveData);
            }elseif($vv['order_type'] == 3 && strtotime($now) >= strtotime($washAfter55Time) && strtotime($now) <= strtotime($washAfter58Time) && $vv['customer_cycle_msg'] == 0){
                //todo 给客服发清洗完成55天的消息
                $this->sendServerMsg($vv['id'],5);
                //todo 修改订单消息状态为2
                $saveData['id'] = $vv['id'];
                $saveData['customer_cycle_msg'] = 1;
                $this->WechatOrderModel->save($saveData);
            }elseif($vv['order_type'] == 2 && strtotime($now) >= strtotime($cleanAfter28Time)){
                //todo 给客服发清洗完成28天的消息
                $this->sendServerMsg($vv['id'],8);

                //todo 修改订单消息状态为2
                $saveData['id'] = $vv['id'];
                $saveData['customer_cycle_msg'] = 2;
                $this->WechatOrderModel->save($saveData);
            }elseif($vv['order_type'] == 2 && strtotime($now) >= strtotime($cleanAfter25Time) && strtotime($now) <= strtotime($cleanAfter28Time) && $vv['customer_cycle_msg'] == 0){
                //todo 给客服发清洗完成25天的消息
                $this->sendServerMsg($vv['id'],7);
                //todo 修改订单消息状态为2
                $saveData['id'] = $vv['id'];
                $saveData['customer_cycle_msg'] = 1;
                $this->WechatOrderModel->save($saveData);
            }
        }
    }
    /**
     * 所有订单超过3天未确认自动修改为已完成并给用户发消息
     */
    public function after3DaysCompleteWashOrder(){
        //获取所有未接单，主管分配给师傅后师傅未接单的数据
        $map['orde.order_state'] = 9;//待确认
        $orderData = $this->WechatOrderModel->alias("orde")
            ->join("jpgk_wechat_order_item item on item.order_id = orde.id")
            ->where($map)
            ->field("orde.*")
            ->select();
        foreach($orderData as $kk=>$vv){

            //判断时间【超过3天的未验收订单自动改为已完成】
            $update_time = $vv['update_time'];
            $after30TIme = date("Y-m-d H:i:s",strtotime("$update_time +3 day"));//用户时间
            $now = date("Y-m-d H:i:s");

            if(strtotime($now) >= strtotime($after30TIme)){

                //todo 修改订单状态为已完成
                $saveData['id'] = $vv['id'];
                $saveData['order_state'] = 3;
                $saveData['update_time'] = $now;
                $this->WechatOrderModel->save($saveData);

                if($vv['order_type'] == 2 && $vv['is_year'] == 1 && $vv['is_main'] == 0){
                    //如果，是子订单，将年服务次数减去1
                    $serviceSql = "UPDATE jpgk_wechat_year_service SET service_num_remain = service_num_remain - 1 WHERE id = ".$vv['year_service_id'];
                    M('')->query($serviceSql);
                    //如果，该子订单是最后一次服务，将年服务主订单改为已完成
                    $serviceTimeData = M('wechat_year_service_time')->where(['year_service_id'=>$vv['year_service_id'],'order_id'=>0])->find();
                    if(empty($serviceTimeData)){
                        $motherData['order_state'] = 3;
                        $this->WechatOrderModel->where(['year_service_id'=>$vv['year_service_id'],'is_year'=>1,'is_main'=>1])->save($motherData);
                    }
                }
                //todo 给用户发消息，订单已完成
                (new WechatService())->sendUserOrderOverMsgNew($vv['id']);
            }
        }
    }

    /**
     * 年服务订单 提前5天给用户提醒
     * @author  HQ.
     * email: huangqing@jpgk.com.cn
     * QQ:2322523770
     */
    public function advance5DayYearServiceCaution(){

        //1.查询消杀年服务订单
        $where['status'] = 1;
        $where['order_id'] = ['eq',0];
        $where['is_send_caution'] = ['eq',0];
//        $where['service.'] = ['eq',0];

        $timeData = M('WechatYearServiceTime')->where($where)->group('year_service_id,id')->select();
//        $timeData = (new WechatPublicOrderService())->getYearServiceData($where);

        $time = time();

        $orderId = '';
        $yearServiceId = [];
        $yearServiceTimeId = [];
        $yearServiceTimeData = [];
        //2.循环数据
        foreach($timeData as $value){

            //3.判断筛选出当前时间是否小于等于5天的订单
            if((strtotime($value['service_time'].' 00:00:00') - $time) <= 432000 && (strtotime($value['service_time'].' 00:00:00') - $time) >=0){

                $yearServiceId[] = $value['year_service_id'];
                $yearServiceTimeId[] = $value['id'];
                $yearServiceTimeData[] = $value;
            }
        }

        //4.通过符合条件的年服务id查询出用户微信标识
        $userData = [];
        if($yearServiceId){
            $userData = (new WechatPublicOrderService())->getOrderMemberData(['year_service_id'=>['in',$yearServiceId],'is_year'=>1,'is_main'=>1],'orde.id,orde.store_name,orde.order_type,orde.facilitator_id,orde.supervisor_id,orde.year_service_id,mem.open_id');
        }

        //5.给筛选出的用户发送提醒
        if($userData){

            foreach($userData as $k => $val){
                foreach($yearServiceTimeData as $k2 => $val2){

                    if($val['year_service_id'] == $val2['year_service_id']){
                        //TODO 给主管发送消息提醒
                        (new WechatService())->sendYearServiceMsgForFacilitator($val['id'],$val['supervisor_id'],$val2['service_time'],$val['order_type'],$val['store_name']);

                        //TODO 给用户发送客服消息提醒
                        (new WechatService())->sendYearServiceMsgForUser($val['id'],$val['open_id'],$val2['service_num'],$val2['service_time'],$val['order_type']);
                    }
                }
            }

            //6.修改年服务数据
            M('WechatYearServiceTime')->where(['id'=>['IN',$yearServiceTimeId]])->save(['is_send_caution'=>1]);
        }
    }

    /**
     * 年服务订单 提前一天给用户创建订单
     * @author  HQ.
     * email: huangqing@jpgk.com.cn
     * QQ:2322523770
     */
    public function advance1DayYearServiceCreatOrder(){

        //1.查询消杀年服务订单
        $where['serviceTime.status'] = 1;
        $where['serviceTime.order_id'] = ['eq',0];
        $timeData = (new WechatOrderModel())->getYearDataByMap($where,'serviceTime.id as serviceTimeID,serviceTime.service_time,service.id as serviceId,serviceTime.service_num');

        $time = time();
        $orderId = [];
        $yearServiceId = [];
        $yearServiceTimeId = [];
        $tempData = [];
        //2.循环数据
        foreach($timeData as $value){

            //3.判断筛选出当前时间是否小于等于1天的订单
            if((strtotime($value['service_time'].' 00:00:00') - $time) <= 86400 && (strtotime($value['service_time'].' 23:59:59') - $time) >=0){

                $userData = (new WechatPublicOrderService())->getOrderMemberData(['year_service_id'=>$value['serviceId'],'is_year'=>1,'is_main'=>1],'orde.id,orde.order_state,orde.store_name,orde.order_type,orde.facilitator_id,orde.supervisor_id,orde.year_service_id,mem.open_id');
                if($userData[0]['order_state'] != 11){//当前订单状态不是服务中
                    continue;
                }
//                $yearServiceId[] = $value['year_service_id'];
//                $yearServiceTimeId[] = $value['serviceTimeID'];
//                $orderId[] = $value['orderId'];

                //4.生成年服务子订单

                (new WechatPublicOrderService())->creatWechatOrder($value,$userData[0]);
            }
        }
    }
    /**
     * 年服务订单 根据年服务ID和日期直接生成订单
     * @author  HQ.
     * email: huangqing@jpgk.com.cn
     * QQ:2322523770
     */
    public function advance1DayCreatOrderByDate($year_id,$date)
    {

        //1.查询消杀年服务订单
        $where['serviceTime.status'] = 1;
        $where['serviceTime.order_id'] = ['eq', 0];
        $where['serviceTime.year_service_id'] = $year_id;
        $where['serviceTime.service_time'] = $date;
        $timeData = (new WechatOrderModel())->getYearDataByMap($where, 'serviceTime.id as serviceTimeID,serviceTime.service_time,service.id as serviceId,serviceTime.service_num');

        //2.循环数据
        foreach ($timeData as $value) {

            //3.判断筛选出当前时间是否小于等于1天的订单

            $userData = (new WechatPublicOrderService())->getOrderMemberData(['year_service_id' => $value['serviceId'], 'is_year' => 1, 'is_main' => 1], 'orde.id,orde.store_name,orde.order_type,orde.facilitator_id,orde.supervisor_id,orde.year_service_id,mem.open_id');

//                $yearServiceId[] = $value['year_service_id'];
//                $yearServiceTimeId[] = $value['serviceTimeID'];
//                $orderId[] = $value['orderId'];

            //4.生成年服务子订单

            (new WechatPublicOrderService())->creatWechatOrder($value, $userData[0]);
        }
    }
}